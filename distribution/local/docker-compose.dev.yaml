services:
  backend:
    environment:
      - ASPNETCORE_ENVIRONMENT=test
      - AWS_PROXY_HOST=minio
      - AWS_PROXY_PORT=9000
    links:
      - minio
      - postgres
      - sqs

  minio:
    container_name: minio
    image: quay.io/minio/minio:RELEASE.2024-03-07T00-43-48Z
    volumes:
      - ./volumes.local/minio:/data
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=admin123
      - MC_HOST_local=http://admin:admin123@localhost:9000
      - MINIO_NOTIFY_WEBHOOK_ENABLE_ADPOSTHOOK=on
      - MINIO_NOTIFY_WEBHOOK_ENDPOINT_ADPOSTHOOK=http://local-pusher:5000/webhook
    ports:
      - 9000:9000
      - 9001:9001
    command:
      - server
      - /data
      - --console-address
      - :9001
    healthcheck:
      test: mc ready local
      interval: 10s
      timeout: 3s

  configureminio:
    image: quay.io/minio/mc:RELEASE.2024-03-13T23-51-57Z
    links:
      - minio
    restart: no
    entrypoint: >
      /bin/sh -c "
      mc alias set local http://minio:9000 admin admin123 &&
      buckets=("non-processed" "processed" "schedule") &&
      for bucket in "$${buckets[@]}"; do
        mc mb local/"$$bucket" || true
        mc anonymous set download local/"$$bucket" || true
      done &&

      mc event add local/non-processed arn:minio:sqs::ADPOSTHOOK:webhook --event put || true &&

      exit 0;
      "

  postgres:
    container_name: postgres
    image: postgres:16.2-bullseye
    environment:
      - POSTGRES_PASSWORD=postgres
    user: root
    ports:
      - 5432:5432
    volumes:
      - postgres:/var/lib/postgresql/data/
    healthcheck:
      test: pg_isready -d postgres
      interval: 10s
      timeout: 3s
      retries: 3

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:8.4
    user: root
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@domain.com
      - PGADMIN_DEFAULT_PASSWORD=admin123
      - PGADMIN_CONFIG_SERVER_MODE=False
      - PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED=False
    ports:
      - 5050:80
    entrypoint: /bin/sh -c "chmod 600 /pgadmin4/postgres.pass; /entrypoint.sh"
    volumes:
      - ./infra/config/pgadmin/servers.json:/pgadmin4/servers.json
      - ./infra/config/pgadmin/postgres.pass:/pgadmin4/postgres.pass
    depends_on:
      - postgres

  sqs:
    container_name: sqs
    image: softwaremill/elasticmq-native:1.5.7
    ports:
      - 9324:9324
      - 9325:9325
    volumes:
      - ./infra/config/sqs/elasticmq.conf:/opt/elasticmq.conf

  local-pusher:
    container_name: local-pusher
    image: ghcr.io/sotex-lab/sotex-box/local-pusher:${COMMIT_SHA}

volumes:
  postgres:
